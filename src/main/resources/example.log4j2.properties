status = error
dest = err
name = LoggingConfig
 
property.filename = log/bib2lod.log
 
filter.threshold.type = ThresholdFilter
filter.threshold.level = debug
 
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} line %L - %msg%n
 
# Note: if this is defined, the file is created even if empty. (To write to the
# file, comment in logger.rolling lines below.)
# appender.rolling.type = RollingFile
# appender.rolling.name = RollingFile
# appender.rolling.fileName = ${filename}
# appender.rolling.filePattern = log/bib2lod-%d{MM-dd-yy-HH-mm-ss}-%i.log
# appender.rolling.layout.type = PatternLayout
# appender.rolling.layout.pattern = %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} line %L - %msg%n
# appender.rolling.policies.type = Policies
# appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
# appender.rolling.policies.time.interval = 2
# appender.rolling.policies.time.modulate = true
# appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
# appender.rolling.policies.size.size=100MB
# appender.rolling.strategy.type = DefaultRolloverStrategy
# appender.rolling.strategy.max = 5
 
# To write to a rolling file, comment in these lines and the definition of the
# rolling file appender above.
# logger.rolling.name = org.ld4l.bib2lod
# logger.rolling.level = debug
# logger.rolling.additivity = false
# logger.rolling.appenderRef.rolling.ref = RollingFile

# Use this for debugging of a specific class.
# NB If class is in package below, class must be listed first.
# logger.logger1.name = org.ld4l.bib2lod.configuration.Configuration
# logger.logger1.level = debug
# logger.logger1.additivity = false
# logger.logger1.appenderRef.console.ref = STDOUT

# Use this for debugging of a specific package
# NB If package contains class above, class must be listed first.
# logger.logger2.name = org.ld4l.bib2lod.configuration
# logger.logger2.level = debug
# logger.logger2.additivity = false
# logger.logger2.appenderRef.console.ref = STDOUT

rootLogger.level = info
rootLogger.appenderRef.stdout.ref = STDOUT