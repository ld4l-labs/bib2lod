package org.ld4l.bib2lod.uri;

import java.util.List;

import org.apache.jena.rdf.model.Resource;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.ld4l.bib2lod.configuration.Configuration;
import org.ld4l.bib2lod.entities.Entity;

/**
 * An abstract implementation.
 */
public abstract class BaseUriMinter implements UriMinter {

    private static final Logger LOGGER = LogManager.getLogger(); 
    
    // Remains to be seen which of these should be member variables. Everything
    // can be retrieved from the configuration, but it may be more convenient
    // to store them directly.
    protected Configuration configuration;
    protected String localNamespace;

    /**
     * Constructor.
     * @param configuration
     */
    public BaseUriMinter(Configuration configuration) {
        this.configuration = configuration;
        this.localNamespace = configuration.getLocalNamespace();
    }

    
    /**
     * Mints a URI for the Resource by concatenating the local namespace and 
     * the local name generated by the concrete implementation. 
     * @param resource - the Resource to be assigned the URI
     * @return the URI
     */
    // TODO Do we ever need to mint a URI in a different namespace? If so, add
    // another method and pass in local namespace.
    public String getUriFor(Entity entity) {
        String uri = localNamespace + getLocalName(entity);
        LOGGER.debug("URI = " + uri);
        return uri;
    }
    
    protected abstract String getLocalName(Entity entity);

}
